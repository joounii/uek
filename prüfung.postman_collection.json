{
	"info": {
		"_postman_id": "e64b630f-234f-4a88-9c17-2e053e2bcab6",
		"name": "pr√ºfung",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25423269"
	},
	"item": [
		{
			"name": "tasks",
			"item": [
				{
					"name": "get all tasks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "createn new task",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"new test book\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "get one task",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tasks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "updated task",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"new test book\",\r\n    \"finishedAt\": \"Wed May 17 2023 10:44:18 GMT+0200 (Central European Summer Time)\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/tasks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete task",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tasks/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "tests",
			"item": [
				{
					"name": "login(no parameter)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "http://localhost:3000/authentication/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"authentication",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login(wrong password)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "testgmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "wrong_password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/authentication/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"authentication",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login(no email)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "testgmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "m295",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/authentication/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"authentication",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "test@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "m295",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/authentication/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"authentication",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "createn new task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"pm.test(\"Title is set right\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.title).to.eql(\"new test book\");\r",
									"});\r",
									"pm.test(\"Id exists\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).exist;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"new test book\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "createn new task(missing parameters)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 406\", function () {\r",
									"    pm.response.to.have.status(406);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "get one task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tasks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "get one task(wrong id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tasks/this_id_doesnt_exist",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"this_id_doesnt_exist"
							]
						}
					},
					"response": []
				},
				{
					"name": "updated task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"pm.test(\"Title is set right\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.title).to.eql(\"updated book\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"updated book\",\r\n    \"finishedAt\": \"Wed May 17 2023 10:44:18 GMT+0200 (Central European Summer Time)\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/tasks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "updated task(no id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"updated book\",\r\n    \"finishedAt\": \"Wed May 17 2023 10:44:18 GMT+0200 (Central European Summer Time)\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/tasks/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "updated task(wrong id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"updated book\",\r\n    \"finishedAt\": \"Wed May 17 2023 10:44:18 GMT+0200 (Central European Summer Time)\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/tasks/hello",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"hello"
							]
						}
					},
					"response": []
				},
				{
					"name": "updated task(missing parameters)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 406\", function () {\r",
									"    pm.response.to.have.status(406);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"finishedAt\": \"Wed May 17 2023 10:44:18 GMT+0200 (Central European Summer Time)\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/tasks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"pm.test(\"Responds with the right task\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(2);\r",
									"    pm.expect(jsonData.title).to.eql(\"do the dishes\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tasks/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete task(wrong id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tasks/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete task(no id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tasks/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "verify(loged in)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/authentication/verify",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"authentication",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/authentication/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"authentication",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "verify(loged out)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/authentication/verify",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"authentication",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all tasks(no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "createn new task(no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"new test book\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "get one task(no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tasks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "updated task(no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"updated book\",\r\n    \"finishedAt\": \"Wed May 17 2023 10:44:18 GMT+0200 (Central European Summer Time)\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/tasks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete task(no access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"pm.test(\"Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tasks/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"2"
							]
						}
					},
					"response": []
				}
			],
			"description": "run this folder to check if everything works as it should"
		},
		{
			"name": "authentication",
			"item": [
				{
					"name": "login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "test@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "m295",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/authentication/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"authentication",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "verify",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/authentication/verify",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"authentication",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/authentication/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"authentication",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}